# Default values for snappass.
replicaCount: 1

image:
  repository: docker.io/samueldg/snappass
  tag: latest@sha256:3987195edbe623a9a7400fbb68318059d4fc8c20d48f73a6bd52598e56b3b9b3
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

redis:
  # -- Enables the Redis Helm chart dependency
  enabled: true

snappass:
  debug:
    # -- If the debug mode should be enabled
    enabled: false
  ssl:
    # -- Enables SSL on application level
    enabled: false
  # -- Location of static assets
  staticUrl: ""
  # -- URL Prefix (e.g. when running SnapPass behind a reverse proxy)
  urlPrefix: ""
  # -- Secret key used to sign cookies
  secretKey: ""
  # -- Existing secret with a `secretKey` field, used to sign cookies
  existingSecret: ""
  redis:
    host: ""
    port: 6379
    password: ""
    # -- Existing secret with a `redis-password` field, used to authenticate against Redis
    #existingSecret: ""
    #existingSecretPasswordKey: ""
    db: 0
    prefix: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: kong
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: snappass.rampanwar.info
      paths: ["/"]

  #tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 500m
    memory: 256Mi

nodeSelector: {}

tolerations: []

affinity: {}
